@page "/products/{Cat:int}"
@attribute [Authorize(Roles = "User,Admin")]

<PageTitle>Produkte</PageTitle>

@using Hardware4You.Models
@using Hardware4You.Data
@using MudBlazor
@inject IProductService ProductService

<MudGrid Class="pb-12">
    <!-- Produkt überschrift -->
    <MudItem xs="12">
        <MudPaper Class="d-flex justify-content-center" Style="@($"background:#F0F0F0")" Elevation="0">
            <MudPaper Class="flex-auto pt-2" Style="@($"color:{Colors.Green.Darken3}; padding-bottom:12px; background:{Colors.Shades.Transparent}")">
                <MudText Typo="Typo.h4" Class="text-center" Style="font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; font-weight:bold">Produkte</MudText>
            </MudPaper>
        </MudPaper>
    </MudItem>
</MudGrid>


<!-- Produkt Kacheln -->
<MudGrid>
    @foreach (var product in Products)
    {
        if (product.CategoryId == Cat && product.Quantity > 0)
        {

            <MudItem xs="3">
            <MudCard Style="@($"color:{Colors.Green.Darken3};background:{Colors.Shades.White}")">
                <MudCardContent>
                    <div style="height: 200px;  overflow: hidden;">
                        <img src="@GetImageUrl(product)" style="width: 100%; height: 100%; object-fit: contain;" />
                    </div>
                    <div class="d-flex align-items-center pa-2">
                        <MudText Typo="Typo.h6">@product.Name</MudText>
                    </div>
                    <MudChip Style="@($"color:{Colors.Green.Darken3}")">CHF @product.Price</MudChip>
                </MudCardContent>
                <MudCardActions>
                    <a href="/products/@Cat/@product.Id">
                        <MudButton Class="rounded-lg" Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.KeyboardArrowRight" Style="@($"color:{Colors.Shades.White}; background:{Colors.Green.Darken2}")">Details anzeigen</MudButton>
                    </a>
                </MudCardActions>
            </MudCard>
            </MudItem>
/*alter Code*/

            @* <MudItem xs="3">
                <MudCard Style="@($"color:{Colors.Green.Darken3};background:{Colors.Shades.White}")">
                    <MudCardMedia Image="@GetImageUrl(product)" Height="200"/>
                    <MudCardContent>
                        <div class="d-flex align-items-center pa-2">
                            <MudText Typo="Typo.h6">@product.Name</MudText>
                        </div>
                           <MudChip Style="@($"color:{Colors.Green.Darken3}")">CHF @product.Price</MudChip>
                            
                    </MudCardContent>
                    <MudCardActions>
                        <a href="/products/@Cat/@product.Id">
                                <MudButton Class="rounded-lg" Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.KeyboardArrowRight" Style="@($"color:{Colors.Shades.White}; background:{Colors.Green.Darken2}")">Details anzeigen</MudButton>
                        </a>
                    </MudCardActions>
                </MudCard>
            </MudItem> *@
        }
    }
</MudGrid>

@code {
    [Parameter]
    public int Cat { get; set; }

    [EditorRequired]
    [Parameter]
    public IEnumerable<Product> Products { get; set; } = null!;

    protected override void OnInitialized()
    {
        Products = ProductService.GetProducts();
    }
    private string GetImageUrl(Product product)
    {
        var base64Image = Convert.ToBase64String(product.Media);
        return $"data:{product.MediaType};base64,{base64Image}";
    }

}

